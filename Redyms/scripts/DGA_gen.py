# ******************************************************************************
#
#   Win32/Redyms reconstructed DGA generation algorithm
#
#   by Aleksandr Matrosov (@matrosov)
#
#   More details about Win32/Redyms: 
#   http://www.welivesecurity.com/2013/02/04/what-do-win32redyms-and-tdl4-have-in-common/
#
# ******************************************************************************


import sys
import array


def dga_gen(domain_count, cc_const):
    tmp1 = cc_const * (domain_count + 5)
    tmp2 = (tmp1 % 7) + 9
    tmp3 = tmp1 + (tmp2 ^ 0x5f1)
    size = (tmp3 & 3) + 5


    data = [0 for i in xrange(tmp2 + size + 9)]
    for i in xrange(tmp2):
        if i == size:
            data[i] = 77
        else:
            data[i] = (tmp3 % 0x1A + 32) ^ 0xA1
        tmp3 = tmp3 + (i ^ 0x5B)

    data[tmp2 + 0] = 0x8f
    data[tmp2 + 1] = 0xcf
    data[tmp2 + 2] = 0xc4
    data[tmp2 + 3] = 0xd5
    data = [data[i]^0xA1 for i in xrange(tmp2 + 4)]
    for i in xrange(tmp2):
        if data[i] == 0x10:
            data[i] = 45
        else:
            data[i] = (data[i] + 65) & 0xFF

    domain = ""
    for i in xrange(len(data)):
        domain += "%c" % data[i]
    return domain


def make_url(domain):
    tmp = domain.split('-')
    url = "http://%s/%s.php" % (domain, tmp[0])
    return url


def main(domain_num):
    cc_const = 0x3E8
    for i in xrange(int(domain_num)):
        print make_url(dga_gen(i, cc_const))

if (len(sys.argv) == 2):
    main(sys.argv[1])
else:
    print "Usage: %s <domain number>" % (sys.argv[0])